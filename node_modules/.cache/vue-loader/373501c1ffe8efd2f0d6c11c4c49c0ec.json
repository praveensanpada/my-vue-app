{"remainingRequest":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget3.vue?vue&type=template&id=1b54008c&ts=true","dependencies":[{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget3.vue","mtime":1644892518995},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPCEtLWJlZ2luOjpTdGF0aXN0aWNzIFdpZGdldCAzLS0+CiAgPGRpdiA6Y2xhc3M9IndpZGdldENsYXNzZXMiIGNsYXNzPSJjYXJkIj4KICAgIDwhLS1iZWdpbjo6Qm9keS0tPgogICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IGQtZmxleCBmbGV4LWNvbHVtbiBwLTAiPgogICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZmxleC1zdGFjayBmbGV4LWdyb3ctMSBjYXJkLXAiPgogICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiBtZS0yIj4KICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJ0ZXh0LWRhcmsgdGV4dC1ob3Zlci1wcmltYXJ5IGZ3LWJvbGRlciBmcy0zIj57ewogICAgICAgICAgICB0aXRsZQogICAgICAgICAgfX08L2E+CgogICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbXV0ZWQgZnctYm9sZCBtdC0xIj57eyBkZXNjcmlwdGlvbiB9fTwvc3Bhbj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPHNwYW4gY2xhc3M9InN5bWJvbCBzeW1ib2wtNTBweCI+CiAgICAgICAgICA8c3BhbgogICAgICAgICAgICA6Y2xhc3M9ImBiZy1saWdodC0ke2NvbG9yfSB0ZXh0LSR7Y29sb3J9YCIKICAgICAgICAgICAgY2xhc3M9InN5bWJvbC1sYWJlbCBmcy01IGZ3LWJvbGRlciIKICAgICAgICAgICAgPnt7IGNoYW5nZSB9fTwvc3BhbgogICAgICAgICAgPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CgogICAgICA8IS0tYmVnaW46OkNoYXJ0LS0+CiAgICAgIDxhcGV4Y2hhcnQKICAgICAgICBjbGFzcz0ic3RhdGlzdGljcy13aWRnZXQtMy1jaGFydCBjYXJkLXJvdW5kZWQtYm90dG9tIgogICAgICAgIDpvcHRpb25zPSJjaGFydE9wdGlvbnMiCiAgICAgICAgOnNlcmllcz0ic2VyaWVzIgogICAgICAgIDpoZWlnaHQ9ImhlaWdodCIKICAgICAgICB0eXBlPSJhcmVhIgogICAgICA+PC9hcGV4Y2hhcnQ+CiAgICAgIDwhLS1lbmQ6OkNoYXJ0LS0+CiAgICA8L2Rpdj4KICAgIDwhLS1lbmQ6OkJvZHktLT4KICA8L2Rpdj4KICA8IS0tZW5kOjpTdGF0aXN0aWNzIFdpZGdldCAzLS0+Cg=="},{"version":3,"sources":["/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget3.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UAClC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAA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","file":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget3.vue","sourceRoot":"","sourcesContent":["<template>\n  <!--begin::Statistics Widget 3-->\n  <div :class=\"widgetClasses\" class=\"card\">\n    <!--begin::Body-->\n    <div class=\"card-body d-flex flex-column p-0\">\n      <div class=\"d-flex flex-stack flex-grow-1 card-p\">\n        <div class=\"d-flex flex-column me-2\">\n          <a href=\"#\" class=\"text-dark text-hover-primary fw-bolder fs-3\">{{\n            title\n          }}</a>\n\n          <span class=\"text-muted fw-bold mt-1\">{{ description }}</span>\n        </div>\n\n        <span class=\"symbol symbol-50px\">\n          <span\n            :class=\"`bg-light-${color} text-${color}`\"\n            class=\"symbol-label fs-5 fw-bolder\"\n            >{{ change }}</span\n          >\n        </span>\n      </div>\n\n      <!--begin::Chart-->\n      <apexchart\n        class=\"statistics-widget-3-chart card-rounded-bottom\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n        :height=\"height\"\n        type=\"area\"\n      ></apexchart>\n      <!--end::Chart-->\n    </div>\n    <!--end::Body-->\n  </div>\n  <!--end::Statistics Widget 3-->\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport { getCSSVariableValue } from \"@/assets/ts/_utils\";\n\nexport default defineComponent({\n  name: \"kt-widget-3\",\n  props: {\n    widgetClasses: String,\n    title: String,\n    description: String,\n    change: String,\n    color: String,\n    height: Number,\n  },\n  components: {},\n  setup(props) {\n    const height = ref(props.height);\n\n    const color = ref(props.color);\n\n    const labelColor = getCSSVariableValue(\"--bs-\" + \"gray-800\");\n    const baseColor = getCSSVariableValue(\"--bs-\" + color.value);\n    const lightColor = getCSSVariableValue(\"--bs-light-\" + color.value);\n\n    const chartOptions = {\n      chart: {\n        fontFamily: \"inherit\",\n        type: \"area\",\n        height: height.value,\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n        sparkline: {\n          enabled: true,\n        },\n      },\n      plotOptions: {},\n      legend: {\n        show: false,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n        show: true,\n        width: 3,\n        colors: [baseColor],\n      },\n      xaxis: {\n        categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: \"12px\",\n          },\n        },\n        crosshairs: {\n          show: false,\n          position: \"front\",\n          stroke: {\n            color: \"#E4E6EF\",\n            width: 1,\n            dashArray: 3,\n          },\n        },\n        tooltip: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        min: 0,\n        max: 80,\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: \"12px\",\n          },\n        },\n      },\n      states: {\n        normal: {\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n        hover: {\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n      },\n      tooltip: {\n        style: {\n          fontSize: \"12px\",\n        },\n        y: {\n          formatter: function (val) {\n            return \"$\" + val + \" thousands\";\n          },\n        },\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          stops: [0, 100],\n        },\n      },\n      colors: [baseColor],\n      markers: {\n        colors: [baseColor],\n        strokeColor: [lightColor],\n        strokeWidth: 3,\n      },\n    };\n\n    const series = [\n      {\n        name: \"Net Profit\",\n        data: [30, 45, 32, 70, 40],\n      },\n    ];\n\n    return {\n      chartOptions,\n      series,\n    };\n  },\n});\n</script>\n"]}]}