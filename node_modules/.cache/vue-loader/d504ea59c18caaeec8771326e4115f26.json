{"remainingRequest":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget4.vue?vue&type=template&id=876672c8&ts=true","dependencies":[{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget4.vue","mtime":1644892518995},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPCEtLWJlZ2luOjpTdGF0aXN0aWNzIFdpZGdldCA0LS0+CiAgPGRpdiA6Y2xhc3M9IndpZGdldENsYXNzZXMiIGNsYXNzPSJjYXJkIj4KICAgIDwhLS1iZWdpbjo6Qm9keS0tPgogICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IHAtMCI+CiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LXN0YWNrIGNhcmQtcCBmbGV4LWdyb3ctMSI+CiAgICAgICAgPHNwYW4gY2xhc3M9InN5bWJvbCBzeW1ib2wtNTBweCBtZS0yIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzeW1ib2wtbGFiZWwiPgogICAgICAgICAgICA8c3BhbiA6Y2xhc3M9ImBzdmctaWNvbi0ke2NvbG9yfWAiIGNsYXNzPSJzdmctaWNvbiBzdmctaWNvbi0yeCI+CiAgICAgICAgICAgICAgPGlubGluZS1zdmcgOnNyYz0ic3ZnSWNvbiIgLz4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KCiAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGZsZXgtY29sdW1uIHRleHQtZW5kIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWRhcmsgZnctYm9sZGVyIGZzLTIiPnt7IGNoYW5nZSB9fTwvc3Bhbj4KCiAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCBmdy1ib2xkIG10LTEiPnt7IGRlc2NyaXB0aW9uIH19PC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDwhLS1iZWdpbjo6Q2hhcnQtLT4KICAgICAgPGFwZXhjaGFydAogICAgICAgIGNsYXNzPSJzdGF0aXN0aWNzLXdpZGdldC00LWNoYXJ0IGNhcmQtcm91bmRlZC1ib3R0b20iCiAgICAgICAgOm9wdGlvbnM9ImNoYXJ0T3B0aW9ucyIKICAgICAgICA6c2VyaWVzPSJzZXJpZXMiCiAgICAgICAgOmhlaWdodD0iaGVpZ2h0IgogICAgICAgIHR5cGU9ImFyZWEiCiAgICAgID48L2FwZXhjaGFydD4KICAgICAgPCEtLWVuZDo6Q2hhcnQtLT4KICAgIDwvZGl2PgogICAgPCEtLWVuZDo6Qm9keS0tPgogIDwvZGl2PgogIDwhLS1lbmQ6OlN0YXRpc3RpY3MgV2lkZ2V0IDQtLT4K"},{"version":3,"sources":["/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget4.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACnC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEN,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEzD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC","file":"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/src/components/widgets/statsistics/Widget4.vue","sourceRoot":"","sourcesContent":["<template>\n  <!--begin::Statistics Widget 4-->\n  <div :class=\"widgetClasses\" class=\"card\">\n    <!--begin::Body-->\n    <div class=\"card-body p-0\">\n      <div class=\"d-flex flex-stack card-p flex-grow-1\">\n        <span class=\"symbol symbol-50px me-2\">\n          <span class=\"symbol-label\">\n            <span :class=\"`svg-icon-${color}`\" class=\"svg-icon svg-icon-2x\">\n              <inline-svg :src=\"svgIcon\" />\n            </span>\n          </span>\n        </span>\n\n        <div class=\"d-flex flex-column text-end\">\n          <span class=\"text-dark fw-bolder fs-2\">{{ change }}</span>\n\n          <span class=\"text-muted fw-bold mt-1\">{{ description }}</span>\n        </div>\n      </div>\n\n      <!--begin::Chart-->\n      <apexchart\n        class=\"statistics-widget-4-chart card-rounded-bottom\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n        :height=\"height\"\n        type=\"area\"\n      ></apexchart>\n      <!--end::Chart-->\n    </div>\n    <!--end::Body-->\n  </div>\n  <!--end::Statistics Widget 4-->\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport { getCSSVariableValue } from \"@/assets/ts/_utils\";\n\nexport default defineComponent({\n  name: \"kt-widget-4\",\n  props: {\n    widgetClasses: String,\n    svgIcon: String,\n    color: String,\n    change: String,\n    description: String,\n    height: Number,\n  },\n  components: {},\n  setup(props) {\n    const height = ref(props.height);\n\n    const color = ref(props.color);\n\n    const labelColor = getCSSVariableValue(\"--bs-\" + \"gray-800\");\n    const baseColor = getCSSVariableValue(\"--bs-\" + color.value);\n    const lightColor = getCSSVariableValue(\"--bs-light-\" + color.value);\n\n    const chartOptions = {\n      chart: {\n        fontFamily: \"inherit\",\n        type: \"area\",\n        height: height.value,\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n        sparkline: {\n          enabled: true,\n        },\n      },\n      plotOptions: {},\n      legend: {\n        show: false,\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n        show: true,\n        width: 3,\n        colors: [baseColor],\n      },\n      xaxis: {\n        categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n        axisBorder: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: \"12px\",\n          },\n        },\n        crosshairs: {\n          show: false,\n          position: \"front\",\n          stroke: {\n            color: \"#E4E6EF\",\n            width: 1,\n            dashArray: 3,\n          },\n        },\n        tooltip: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        min: 0,\n        max: 60,\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: \"12px\",\n          },\n        },\n      },\n      states: {\n        normal: {\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n        hover: {\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: \"none\",\n            value: 0,\n          },\n        },\n      },\n      tooltip: {\n        style: {\n          fontSize: \"12px\",\n        },\n        y: {\n          formatter: function (val) {\n            return \"$\" + val + \" thousands\";\n          },\n        },\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          stops: [0, 100],\n        },\n      },\n      colors: [baseColor],\n      markers: {\n        colors: [baseColor],\n        strokeColor: [lightColor],\n        strokeWidth: 3,\n      },\n    };\n\n    const series = [\n      {\n        name: \"Net Profit\",\n        data: [40, 40, 30, 30, 35, 35, 50],\n      },\n    ];\n\n    return {\n      chartOptions,\n      series,\n    };\n  },\n});\n</script>\n"]}]}